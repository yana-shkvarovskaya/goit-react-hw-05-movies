{"version":3,"file":"static/js/744.bf247ca3.chunk.js","mappings":"kPAMe,SAASA,IACtB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAKA,OAJAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,EAAAA,qBAA+BN,GAASO,KAAKH,GAC7CI,EAAAA,GAAAA,WAAkB,OACjB,CAACR,KAEF,8BACGG,GAAWA,EAAQM,OAAS,GAC3B,eAAIC,UAAU,UAAd,SACGP,EAAQQ,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,2BACE,qCAAaD,MACb,uBAAIC,MAFGF,SAOb,cAAGF,UAAU,kBAAb","sources":["components/Reviews/Reviews.js"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { animateScroll as scroll } from 'react-scroll';\nimport moviesApi from 'services/movies-api';\nimport './Reviews.css';\n\nexport default function Reviews() {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState(null);\n  useEffect(() => {\n    moviesApi.fetchApiMovieReviews(movieId).then(setReviews);\n    scroll.scrollMore(600);\n  }, [movieId]);\n  return (\n    <>\n      {reviews && reviews.length > 0 ? (\n        <ul className=\"reviews\">\n          {reviews.map(({ id, author, content }) => (\n            <li key={id}>\n              <h2>Author: {author}</h2>\n              <p>{content}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p className=\"reviews__phrase\">We don't have reviews for this movie.</p>\n      )}\n    </>\n  );\n}\n"],"names":["Reviews","movieId","useParams","useState","reviews","setReviews","useEffect","moviesApi","then","scroll","length","className","map","id","author","content"],"sourceRoot":""}