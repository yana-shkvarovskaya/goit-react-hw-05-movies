{"version":3,"file":"static/js/561.14fe5a1e.chunk.js","mappings":"oLAEe,SAASA,EAAT,GAAgC,IAATC,EAAQ,EAARA,KACpC,OAAO,eAAIC,UAAU,QAAd,SAAuBD,M,yECQjBE,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,wGAEUC,EAAS,CACbC,IAAI,uBAHV,SAM2BC,GAAAA,CAAMF,GANjC,uBAMYG,EANZ,EAMYA,KANZ,kBAOWA,EAAKC,SAPhB,gCASI,IAAIC,MAAM,2BATd,gFAaeC,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAqCC,GAArC,2FAEUP,EAAS,CACbC,IAAI,eACJO,OAAQ,CACND,MAAAA,IALR,SAS2BL,GAAAA,CAAMF,GATjC,uBASYG,EATZ,EASYA,KATZ,kBAUWA,EAAKC,SAVhB,gCAYI,IAAIC,MAAM,2BAZd,gFAgBeI,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAoCC,GAApC,2FAEUV,EAAS,CACbC,IAAI,SAAD,OAAWS,IAHpB,SAM2BR,GAAAA,CAAMF,EAAQU,GANzC,uBAMYP,EANZ,EAMYA,KANZ,kBAOWA,GAPX,gCASI,IAAIE,MAAM,2BATd,gFAaeM,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAiCD,GAAjC,2FAEUV,EAAS,CACbC,IAAI,SAAD,OAAWS,EAAX,aAHT,SAM2BR,GAAAA,CAAMF,EAAQU,GANzC,uBAMYP,EANZ,EAMYA,KANZ,kBAOWA,EAAKS,MAPhB,gCASI,IAAIP,MAAM,2BATd,gFAaeQ,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAoCH,GAApC,2FAEUV,EAAS,CACbC,IAAI,SAAD,OAAWS,EAAX,aAHT,SAM2BR,GAAAA,CAAMF,EAAQU,GANzC,uBAMYP,EANZ,EAMYA,KANZ,kBAOWA,EAAKC,SAPhB,gCASI,IAAIC,MAAM,2BATd,gFA7DAH,IAAAA,SAAAA,QAHiB,gCAIjBA,IAAAA,SAAAA,OAAwB,CACtBY,QAJc,mCAKdC,SAAU,SAuEZ,IAAMC,EAAY,CAChBjB,sBA1EF,WAKeA,OAAAA,EAAAA,MAAAA,KAAAA,YAsEbO,sBAtEF,SAaqC,GAAtBA,OAAAA,EAAAA,MAAAA,KAAAA,YA0DbG,qBA1DF,SAgBoC,GAArBA,OAAAA,EAAAA,MAAAA,KAAAA,YA2CbE,kBA3CF,SAaiC,GAAlBA,OAAAA,EAAAA,MAAAA,KAAAA,YA+BbE,qBA/BF,SAaoC,GAArBA,OAAAA,EAAAA,MAAAA,KAAAA,aAqBf,O,iIClFe,SAASI,IACtB,OAA4BC,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KAMA,OAJAC,EAAAA,EAAAA,YAAU,WACRL,EAAAA,EAAAA,wBAAkCM,KAAKF,KACtC,KAGD,iCACE,SAAC,IAAD,CAAavB,KAAK,mBACjBsB,IACC,wBACGA,EAAOI,KAAI,SAAAC,GAAK,OACf,yBACE,SAAC,KAAD,CAAM1B,UAAU,OAAO2B,GAAE,iBAAYD,EAAME,IAA3C,UACE,uBAAIF,EAAMG,WAFLH,EAAME","sources":["components/PageHeading/PageHeading.js","services/movies-api.js","views/HomeView.js"],"sourcesContent":["import './PageHeading.css';\n\nexport default function PageHeading({ text }) {\n  return <h1 className=\"title\">{text}</h1>;\n}\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '8f2143e87d675d4e916d007dbc4e3721';\n\naxios.defaults.baseURL = BASE_URL;\naxios.defaults.params = {\n  api_key: API_KEY,\n  language: 'en-US',\n};\n\nasync function fetchApiMovieTrending() {\n  try {\n    const config = {\n      url: `trending/movie/week`,\n    };\n\n    const { data } = await axios(config);\n    return data.results;\n  } catch (error) {\n    new Error('No response from server');\n  }\n}\n\nasync function fetchApiMoviesByQuery(query) {\n  try {\n    const config = {\n      url: `search/movie`,\n      params: {\n        query,\n      },\n    };\n\n    const { data } = await axios(config);\n    return data.results;\n  } catch (error) {\n    new Error('No response from server');\n  }\n}\n\nasync function fetchApiMovieDetails(movieId) {\n  try {\n    const config = {\n      url: `movie/${movieId}`,\n    };\n\n    const { data } = await axios(config, movieId);\n    return data;\n  } catch (error) {\n    new Error('No response from server');\n  }\n}\n\nasync function fetchApiMovieCast(movieId) {\n  try {\n    const config = {\n      url: `movie/${movieId}/credits`,\n    };\n\n    const { data } = await axios(config, movieId);\n    return data.cast;\n  } catch (error) {\n    new Error('No response from server');\n  }\n}\n\nasync function fetchApiMovieReviews(movieId) {\n  try {\n    const config = {\n      url: `movie/${movieId}/reviews`,\n    };\n\n    const { data } = await axios(config, movieId);\n    return data.results;\n  } catch (error) {\n    new Error('No response from server');\n  }\n}\n\nconst moviesApi = {\n  fetchApiMovieTrending,\n  fetchApiMoviesByQuery,\n  fetchApiMovieDetails,\n  fetchApiMovieCast,\n  fetchApiMovieReviews,\n};\n\nexport default moviesApi;\n","import { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport moviesApi from '../services/movies-api';\nimport PageHeading from 'components/PageHeading/PageHeading';\n\nexport default function HomeView() {\n  const [movies, setMovies] = useState(null);\n\n  useEffect(() => {\n    moviesApi.fetchApiMovieTrending().then(setMovies);\n  }, []);\n\n  return (\n    <>\n      <PageHeading text=\"Trending today\" />\n      {movies && (\n        <ul>\n          {movies.map(movie => (\n            <li key={movie.id}>\n              <Link className=\"text\" to={`movies/${movie.id}`}>\n                <p>{movie.title}</p>\n              </Link>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n}\n"],"names":["PageHeading","text","className","fetchApiMovieTrending","config","url","axios","data","results","Error","fetchApiMoviesByQuery","query","params","fetchApiMovieDetails","movieId","fetchApiMovieCast","cast","fetchApiMovieReviews","api_key","language","moviesApi","HomeView","useState","movies","setMovies","useEffect","then","map","movie","to","id","title"],"sourceRoot":""}