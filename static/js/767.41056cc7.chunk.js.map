{"version":3,"file":"static/js/767.41056cc7.chunk.js","mappings":"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","sources":["services/movies-api.js","components/Searchbar/Searchbar.js","views/MoviesView.js"],"sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '8f2143e87d675d4e916d007dbc4e3721';\n\naxios.defaults.baseURL = BASE_URL;\naxios.defaults.params = {\n  api_key: API_KEY,\n  language: 'en-US',\n};\n\nasync function fetchApiMovieTrending() {\n  try {\n    const config = {\n      url: `trending/movie/week`,\n    };\n\n    const { data } = await axios(config);\n    return data.results;\n  } catch (error) {\n    new Error('No response from server');\n  }\n}\n\nasync function fetchApiMoviesByQuery(query) {\n  try {\n    const config = {\n      url: `search/movie`,\n      params: {\n        query,\n      },\n    };\n\n    const { data } = await axios(config);\n    return data.results;\n  } catch (error) {\n    new Error('No response from server');\n  }\n}\n\nasync function fetchApiMovieDetails(movieId) {\n  try {\n    const config = {\n      url: `movie/${movieId}`,\n    };\n\n    const { data } = await axios(config, movieId);\n    return data;\n  } catch (error) {\n    new Error('No response from server');\n  }\n}\n\nasync function fetchApiMovieCast(movieId) {\n  try {\n    const config = {\n      url: `movie/${movieId}/credits`,\n    };\n\n    const { data } = await axios(config, movieId);\n    return data.cast;\n  } catch (error) {\n    new Error('No response from server');\n  }\n}\n\nasync function fetchApiMovieReviews(movieId) {\n  try {\n    const config = {\n      url: `movie/${movieId}/reviews`,\n    };\n\n    const { data } = await axios(config, movieId);\n    return data.results;\n  } catch (error) {\n    new Error('No response from server');\n  }\n}\n\nconst moviesApi = {\n  fetchApiMovieTrending,\n  fetchApiMoviesByQuery,\n  fetchApiMovieDetails,\n  fetchApiMovieCast,\n  fetchApiMovieReviews,\n};\n\nexport default moviesApi;\n","import React, { useState } from 'react';\nimport { ImSearch } from 'react-icons/im';\nimport { toast } from 'react-toastify';\nimport './Searchbar.css';\n\nexport default function Searchbar({ onSubmit }) {\n  const [query, setQuery] = useState('');\n\n  const handleNameChange = event => {\n    setQuery(event.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (query.trim() === '') {\n      toast.error('Add movie name');\n      return;\n    }\n    onSubmit(query);\n    setQuery('');\n  };\n  return (\n    <div className=\"Searchbar\">\n      <form onSubmit={handleSubmit} className=\"SearchForm\">\n        <input\n          className=\"SearchForm-input\"\n          name=\"movieName\"\n          value={query}\n          onChange={handleNameChange}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movies\"\n        />\n        <button type=\"submit\" className=\"SearchForm-button\">\n          <ImSearch style={{ marginRight: 8 }} />\n          <span className=\"SearchForm-button-label\">Search</span>\n        </button>\n      </form>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport moviesApi from 'services/movies-api';\nimport Searchbar from 'components/Searchbar/Searchbar';\n\nexport default function MoviesView() {\n  const [query, setQuery] = useState('');\n  const [movies, setMovies] = useState(null);\n\n  const handleFormSubmit = query => {\n    setQuery(query);\n  };\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n    moviesApi.fetchApiMoviesByQuery(query).then(setMovies);\n  }, [query]);\n\n  return (\n    <>\n      <Searchbar onSubmit={handleFormSubmit} />\n\n      {movies && (\n        <ul>\n          {movies.map(movie => (\n            <li key={movie.id}>\n              <Link className=\"text\" to={`${movie.id}`}>\n                <p>{movie.title}</p>\n              </Link>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n}\n"],"names":["fetchApiMovieTrending","config","url","axios","data","results","Error","fetchApiMoviesByQuery","query","params","fetchApiMovieDetails","movieId","fetchApiMovieCast","cast","fetchApiMovieReviews","api_key","language","moviesApi","Searchbar","onSubmit","useState","setQuery","className","event","preventDefault","trim","toast","name","value","onChange","currentTarget","toLowerCase","type","autoComplete","autoFocus","placeholder","style","marginRight","MoviesView","movies","setMovies","useEffect","then","map","movie","to","id","title"],"sourceRoot":""}